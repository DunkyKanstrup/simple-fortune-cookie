name: kuber-deploy

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
  
jobs:
  Kubernets_setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Copy kubeconfig
        working-directory: ./kubernetes
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
      
      - name: Delete old cluster
        working-directory: ./kubernetes
        run: kubectl --kubeconfig kubeconfig delete all --all  

      - name: Set version for frontend
        working-directory: ./kubernetes
        run: sed "s/\${Version}/${{ inputs.version }}/g" deployment-frontend-template.yml > deployment-frontend.yml
      
      - name: Set version for backend
        working-directory: ./kubernetes
        run: sed "s/\${Version}/${{inputs.version}}/g" deployment-backend-template.yml > deployment-backend.yml

      - name: Deploy
        working-directory: ./kubernetes
        run: |
          kubectl --kubeconfig kubeconfig apply -f deployment-frontend.yml
          kubectl --kubeconfig kubeconfig apply -f deployment-backend.yml
          kubectl --kubeconfig kubeconfig apply -f deployment-redis.yml
          kubectl --kubeconfig kubeconfig apply -f environment-configmap.yaml
          kubectl --kubeconfig kubeconfig apply -f backend-svc.yaml
          kubectl --kubeconfig kubeconfig apply -f frontend-svc.yaml
          kubectl --kubeconfig kubeconfig apply -f redis-svc.yaml

        
        
